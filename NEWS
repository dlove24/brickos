Our Next Releases (work pending):
--------------------------------
* we are moving source to gcc-3.4 compatibility
* working on remaining reported issues
* we are updating our HOWTO

News for brickos-0.9.0:
-------------------------
* USB tower on Linux works (See README.usb)
* Install/uninstall targets added to Makefiles
* Many patches filed to date, now applied
* API doc generation now in Makefiles
* LNP Parser for RCX firmware protocol op-codes based on work fm Zhengrong Zang
* dll: NEW -dn or --delete=n option deletes a program from memory
* dll: default program is 1. zero no longer exists from dll point of view
* New added full support for LEGO Remote Control 
* Reawakened the RCX to RCX simple messaging
* Applied all known LNP patches (improving LNP communication)
* Added (optional, compile-in and Macro) support for 3rd party sensors


News for legOS-0.2.6:
-----------------------
* WIN32 ONLY: Support for USB IR tower
   For  firmdl3:   firmdl3 --tty=usb <srec filename>
   For      dll:       dll --tty=usb <code filename>
  NOTEs:
    - 'fast' mode is not supported for the USB tower.
    - as usual, you must delete legOS from your RCX
       before reloading it.
* Updated Cygwin toolchain support
  legOS built and tested on Win9x, WinNT, Win2k, WinXP
   using cygwin tools.  See install docs at legOS website
   http://legos.sourceforge.net  (Docs section)
* New C++ support for Temperature Sensor
* New pressed() method in C++ TouchSensor class
* Manpages for dll(1) and firmdl3(1) utilities
* Fixed BUG #228723: makelx out-of-bounds check bad on c++
* Fixed BUG #226789: Remove -u use to fix build on BSD
* Added a ChangeLog file tracking changes in more detail

News for legOS-0.2.5:
---------------------
* New CONF_AUTOSHUTOFF for RCX self autoshutdown if no activity
  detected.
* New VELOCITY_X variable that tracks speed of a rotation sensor
  attached to X.
* Complete C++ support. Check out c++ in the demo/ directory for an example.
  Be aware that this requires use of gcc 2.95 to build correctly.
* Small floating point changes to make the library more IEEE compliant.
* Very slight firmdl3 update; useful mainly only if you use firmdl for other 
  projects.

News for legOS-0.2.4:
---------------------
* Toolchain fixes to eliminate crashes due to memory misalignment.
* Ability to make variables persistent. (see include/persistent.h)
* Kernel will now build correctly with gcc 2.95.
* New random number generator, random() and srandom() now work without
  libiberty.a.
* Support for C++: new, delete and virtual methods work. Refrain from
  exceptions and RTTI, though.
* Perl only required for backannotated dissassembly now. Linker skripts
  are generated with C programs now.
* Makefile improvements: All tools (including dll and firmdl3) should
  now build  cleanly under Linux and Cygwin. DJGPP currently a work in
  progress.
* New settling code in dsensor.c to increase reliability of sensor
  readings.
* Now RCX signal when battery is low via lcd battery low indicator
* New battery.h module to get mV scaled (get_battery_mv()).
* Now RCX IR can works both in near and in far mode handled via a
  simple option of dll. RCX lcd signals when it's near or far.
* You can run a program after download via dll -e option.
* Predefined constants for touch sensors: TOUCH(x) and TOUCH_1,
  TOUCH_2 ...
* Paolo Masetti and Luis Villa are now serving as co-maintainers.

News for legOS-0.2.3:
---------------------
* Better rotation sensor handling via state tables.
* Sound driver to play sequences of notes.
* Improved packet retransmit handling for program downloads.
* Another collision detection bug fixed (char -> volatile signed char).
* Prebuilt standard kernel in distribution.


News for legOS-0.2.2:
---------------------

* .lx files now generated in three steps instead of six through the
  use of symbolsrec files. makelx is a standalone C program now.
  Perl is no longer required to build user apps.
* experimental new motor driver. old driver used PWM with movement
  and off states. new driver uses PWM with movement and brake states.
  better speed control, but strange sound. enable in boot/config.h.
* Stopping programs with the RUN button now stops motors and active
  sensors and resets network handlers. Programs stopping on their
  own need to perform this themselves. This way, direct control
  of the RCX with on-the-fly compilation is still possible, but
  regular user programs react as expected when stopped.
* The collision bug that occasionally caused the RCX to hang upon
  sending has been adressed.


News for legOS-0.2.1:
---------------------

* .lx relocatable file format for legOS executables
* dll is a stand-alone C program now, should be possible to
  compile under windows?
* boot/ directory for compiled kernel image / linker map
* sensor activation visualization
* better program number display
* ON/OFF always works now.
* user programs survive ON/OFF now.
* Kekoa's single precision floating point library integrated.
  Check Makefile.kernel / Makefile.user if you want to link
  libraries statically to your kernel.
* use cls() to clear user screen only.


News for legOS-0.2:
-------------------

* legOS networking protocol. addressing, ports, timeouts, ...
* loading and linking of dynamic executables
* new project directory structure
* per-project configuration management (maybe obsolete with dynamic
  loading)
* new debounced key driver: try getchar()
* automatic lcd_refresh
* lots of little optimizations: cputs, cputw, ...
* linker script for on-chip modules (relaxation -> 8-bit access)
* support for patched egcs for better IRQ handling
* workarounds for buggy GNU assembler (hint: avoid local labels)
* improved backannotated assembly (push/pop, register names, on-chip
  modules)
* new and improved 8kHz/8bit sound driver (still a little quiet)
